name: Update Schema Documentation

on:
  push:
    branches: [main]
    paths:
      - "src/modules/config/schema.ts"
      - "scripts/generate-schema-docs.ts"

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Generate schema docs
        run: pnpm run generate-docs

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create PR with updated docs
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create a new branch for the docs update
          BRANCH_NAME="docs/auto-update-schema-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          
          # Commit the changes
          git add SCHEMA.md
          git commit -m "docs: auto-update schema documentation

          ðŸ¤– Generated with GitHub Actions"
          
          # Push the branch
          git push origin "$BRANCH_NAME"
          
          # Create a pull request using GitHub CLI
          gh pr create \
            --title "docs: auto-update schema documentation" \
            --body "Automatically generated documentation update for schema changes.

          This PR was created automatically after changes were merged to main that affected the schema.

          ðŸ¤– Generated with GitHub Actions" \
            --head "$BRANCH_NAME" \
            --base main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
